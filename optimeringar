tänkbara optimeringar:

nu i typ prioriterad ordning:

goal room packing (ska vara väldigt bra på sokobanX)
koda om med bfs och A* enbart på pushes (typ lite jobbigt)
spara minne och körtid genom att inte lagra full history i varje state
 - träd med zobrist keys istället
snabbare att hitta lådor i states (accesstid O(n), treemap istället?)
buckets till queue och zobrist hashes
skicka med const referenser där det går, undviker kopiering av states
normalized player position, för att minimera antalet states
pi-coral finding
undvika rakna ut ny hash for varje state, modda gamla hashen istallet
snabbare heuristik (just nu: boxes*goalpos = n^2)
A*:

klart:
bättre heuristik (mindre admissible, söker djupare i trädet)
effektivare goal-test (just nu n^2 i värsta fall, men oftast snabbare)
inte putta lådor till fail-väggar (förberäknade i map)
undvika duplicated states (med zobrist hashing?)
